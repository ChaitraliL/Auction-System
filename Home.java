package socketauction;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author admin
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }
    private ArrayList<Product> list1;
    private float basePrice,maxPrice;
    private int uid,uname,flag=0;
    private Socket socket;
    private PrintWriter pw;
    private BufferedReader in;
    private ObjectInputStream ois;
    public Home(int uid,String uname,Socket socket) throws IOException, ClassNotFoundException
    {
        this.uid=uid;
        this.socket=socket;
        initComponents();
        in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        pw = new PrintWriter(socket.getOutputStream(), true);
        pw.println("home enabled");
        ois  = new ObjectInputStream( socket.getInputStream());
        Show_Products_In_JTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonADD = new javax.swing.JButton();
        jButtonDELETE = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_products = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonUPDATE = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMaximumSize(new java.awt.Dimension(30000, 30000));
        jPanel1.setLayout(null);

        jButtonADD.setText("ADD");
        jButtonADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADDActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonADD);
        jButtonADD.setBounds(20, 340, 77, 23);

        jButtonDELETE.setText("DELETE");
        jButtonDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDELETEActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDELETE);
        jButtonDELETE.setBounds(200, 340, 77, 23);

        jLabel1.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product ID");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 30, 85, 17);

        jTable_Display_products.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT ID", "PRODUCT NAME", "CATEGORY", "BASE PRICE", "MAX PRICE", "DESCRIPTION"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Display_products.setAutoscrolls(false);
        jTable_Display_products.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_productsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_products);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(367, 11, 562, 316);

        jLabel2.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Product Name");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 70, 101, 17);

        jLabel3.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Category");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 110, 85, 17);

        jLabel4.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Base Price");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 140, 85, 17);

        jLabel5.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Max Price");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 170, 85, 17);

        jLabel6.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Description");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 220, 85, 20);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(130, 30, 170, 20);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2);
        jTextField2.setBounds(130, 70, 166, 20);
        jPanel1.add(jTextField3);
        jTextField3.setBounds(130, 110, 166, 20);
        jPanel1.add(jTextField4);
        jTextField4.setBounds(130, 140, 166, 20);

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField5);
        jTextField5.setBounds(130, 180, 166, 20);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(130, 220, 166, 96);

        jButtonUPDATE.setText("UPDATE");
        jButtonUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUPDATEActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUPDATE);
        jButtonUPDATE.setBounds(110, 340, 77, 23);

        jButton1.setText("AUCTION");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(290, 340, 79, 23);

        jButton2.setText("LOG OUT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(160, 380, 77, 23);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ac_media_screen-gizaMemphis_ncsa.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 0, 950, 520);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUPDATEActionPerformed
        try {
            // TODO add your handling code here:
            
            String query="UPDATE productinfo SET PRONAME='"+jTextField2.getText()+"',CATEGORY='"+jTextField3.getText()+"',BASEPRICE="+jTextField4.getText()+",MAXPRICE="+jTextField5.getText()+",DESCRIPTION='"+jTextArea1.getText()+"' WHERE PRODUCTID="+jTextField1.getText()+"";
            executeSQlQuery(query, "Updated");
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonUPDATEActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButtonDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDELETEActionPerformed
        // TODO add your handling code here:
        String query = "DELETE FROM productinfo WHERE PRODUCTID= "+jTextField1.getText()+"";
        try {
            executeSQlQuery(query,"Deleted");
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonDELETEActionPerformed

    private void jButtonADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADDActionPerformed
        try {
            // TODO add your handling code here:
            String query = "INSERT INTO productinfo (PRONAME,CATEGORY,BASEPRICE,MAXPRICE,DESCRIPTION,USRID) VALUES('"+jTextField2.getText()+"','"+jTextField3.getText()+"',"+jTextField4.getText()+","+jTextField5.getText()+",'"+jTextArea1.getText()+"',"+uid+")";
            executeSQlQuery(query, "Inserted");
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonADDActionPerformed

    private void jTable_Display_productsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_productsMouseClicked
        // TODO add your handling code here:
        if(flag==0)
        {
            jTable_Display_UsersMouseClicked(evt);
            jTextField1.setEditable(false);
        }
        else
        {
            int i = jTable_Display_products.getSelectedRow();
            basePrice = list1.get(i).getbase_price();
            maxPrice = list1.get(i).getmax_price();
            
            String input = JOptionPane.showInputDialog(null,"Enter the bid value:","Welcome to the bidding window",
            JOptionPane.PLAIN_MESSAGE);
            float bid = Float.valueOf(input);
            if(bid<basePrice)
            {
               JOptionPane.showMessageDialog(null,"Enter price more than "+basePrice); 
            }
            else if(bid>maxPrice)
            {
              JOptionPane.showMessageDialog(null,"Congratulations, you won the product!! product will be dilvered at your address");  
               DefaultTableModel model = (DefaultTableModel)jTable_Display_products.getModel();
               pw.println("remove");
               String query = "DELETE FROM productinfo WHERE PRODUCTID= "+list1.get(i).getid()+"";
               pw.println(query);
                try {
                    in.readLine();
                } catch (IOException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
               model.removeRow(i);
            }
            else
            {
                try {
                    JOptionPane.showMessageDialog(null,"Sorry, you have to bid more to get the product");
                    DefaultTableModel model = (DefaultTableModel)jTable_Display_products.getModel();
                    pw.println("change");
                    String query="UPDATE productinfo SET BASEPRICE="+bid+" WHERE PRODUCTID="+list1.get(i).getid()+"";
                    pw.println(query);
                    in.readLine();
                    model.setValueAt(bid, i, 3);
                }
                //System.out.println(bid);
                //System.out.println(basePrice);
                //System.out.println(maxPrice);
                catch (IOException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jTable_Display_productsMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pw.println("auction");
        flag=1;
        try {
            // TODO add your handling code here:
       list1 = (ArrayList<Product>) ois.readObject() ; // getting prodict list from server
       
       DefaultTableModel model = (DefaultTableModel)jTable_Display_products.getModel();
       model.setRowCount(0);
       Object[] row = new Object[6];
       for(int i = 0; i < list1.size(); i++)
       {
           row[0] = list1.get(i).getid();
           row[1] = list1.get(i).getname();
           row[2] = list1.get(i).getcategory();
           row[3] = list1.get(i).getbase_price();
           //row[4] = list1.get(i).getmax_price();
           row[5] = list1.get(i).getdescription();
           //row[6] = list.get(i).getusrid();
           
           model.addRow(row);
       }
       jTextField1.setText(""); jTextField1.setEnabled(false);
       jTextField2.setText(""); jTextField2.setEnabled(false);
       jTextField3.setText(""); jTextField3.setEnabled(false);
       jTextField4.setText(""); jTextField4.setEnabled(false);
       jTextField5.setText(""); jTextField5.setEnabled(false);
       jTextArea1.setText(""); jTextArea1.setEnabled(false);
       jButtonADD.setEnabled(false);
       jButtonUPDATE.setEnabled(false);
       jButtonDELETE.setEnabled(false);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        pw.println("exit");
        this.setVisible(false);
        JOptionPane.showMessageDialog(null,"THANK YOU , VISIT AGAIN!!");
    }//GEN-LAST:event_jButton2ActionPerformed

   public void Show_Products_In_JTable() throws IOException, ClassNotFoundException
   {

       ArrayList<Product> list = (ArrayList<Product>) ois.readObject() ; // getting prodict list from server
       
       DefaultTableModel model = (DefaultTableModel)jTable_Display_products.getModel();
       Object[] row = new Object[6];
       for(int i = 0; i < list.size(); i++)
       {
           row[0] = list.get(i).getid();
           row[1] = list.get(i).getname();
           row[2] = list.get(i).getcategory();
           row[3] = list.get(i).getbase_price();
           row[4] = list.get(i).getmax_price();
           row[5] = list.get(i).getdescription();
           //row[6] = list.get(i).getusrid();
           
           model.addRow(row);
       }
    }
   
   public void executeSQlQuery(String query,String message) throws IOException, ClassNotFoundException 
   {
        pw.println(message);
        pw.println(query);
        String status = in.readLine();

           if( status.equals("executed"))
           {
               // refresh jtable data
               DefaultTableModel model = (DefaultTableModel)jTable_Display_products.getModel();
               model.setRowCount(0);
               Show_Products_In_JTable();
               
               JOptionPane.showMessageDialog(null, "Data "+message+" Succefully");
           }else
           {
               JOptionPane.showMessageDialog(null, "Data Not "+message);
           }
    
   }
   
       private void jTable_Display_UsersMouseClicked(java.awt.event.MouseEvent evt) {                                                  
       // Get The Index Of The Slected Row 
        int i = jTable_Display_products.getSelectedRow();

        TableModel model = jTable_Display_products.getModel();
        
         // Display Slected Row In JTexteFields
        jTextField1.setText(model.getValueAt(i,0).toString());

        jTextField2.setText(model.getValueAt(i,1).toString());

        jTextField3.setText(model.getValueAt(i,2).toString());

        jTextField4.setText(model.getValueAt(i,3).toString());
        
        jTextField5.setText(model.getValueAt(i,4).toString());
        
        jTextArea1.setText(model.getValueAt(i,5).toString());
    }                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonADD;
    private javax.swing.JButton jButtonDELETE;
    private javax.swing.JButton jButtonUPDATE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Display_products;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
